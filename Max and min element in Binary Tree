---------------------------------------------// Max and min element in Binary Tree //--------------------------------------------------------------

Given a Binary Tree, find maximum and minimum elements in it.

Example:

Input: 
           
Output: 11 1
Explanation: The maximum and minimum element in this binary tree is 11 and 1 respectively.
Input: 
           6
        / \
       5   8
      /
     2
Output: 8 2
Explanation: The maximum and minimum element in this binary tree is 8 and 2 respectively.
Constraints:
1 <= number of nodes <= 105
1 <= data of a node <= 105


----------------------------------------------------// Solution //----------------------------------------------------------------

/*
struct Node
{
    int data;
    struct Node *left;
    struct Node *right;

    Node(int x)
    {
        data = x;
        left = NULL;
        right = NULL;
    }
};
*/
class Solution {
  public:
  int findMinHelper(Node *root){
      if(root==NULL){
          return INT_MAX;
      }
      int leftSubTree=findMinHelper(root->left);
      int rightSubTree=findMinHelper(root->right);
      return min(root->data,min(leftSubTree,rightSubTree));
  }
  int findMaxHelper(Node *root){
      if(root==NULL){
          return INT_MIN;
      }
      int leftSubTree=findMaxHelper(root->left);
      int rightSubTree=findMaxHelper(root->right);
      return max(root->data,max(leftSubTree,rightSubTree));
  }
 
    int findMax(Node *root) {
        return findMaxHelper(root);
        
    }

    int findMin(Node *root) {
        
        return findMinHelper(root);
    }
};
